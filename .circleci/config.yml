version: 2.1
orbs:
  rn: react-native-community/react-native@6.1.0

aliases:
  release-tags: &release-tags
    filters:
      tags:
        ignore: /^.*-SNAPSHOT/
      branches:
        ignore: /.*/

commands:
  install-dependencies:
    steps:
      - run:
          name: Yarn Install
          command: yarn install --non-interactive --cache-folder /tmp/yarn

  set_up_git_user:
    description: Set git config parameters
    steps:
      - run: git config --global user.email "dev+ci@revenuecat.com"
      - run: git config --global user.name "RevenueCat CI"

  trust-github-key:
    steps:
      - run:
          name: Trust GitHub key
          command: |
            for ip in $(dig @8.8.8.8 github.com +short); \
            do ssh-keyscan github.com,$ip; \
            ssh-keyscan $ip; \
            done 2>/dev/null >> ~/.ssh/known_hosts
  install-rubydocker-dependencies:
    steps:
      - restore_cache:
          keys:
            - v1-rubydocker-gem-cache-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle install --clean --path vendor/bundle
      - save_cache:
          key: v1-rubydocker-gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  install-mac-dependencies:
    steps:
      - restore_cache:
          keys:
            - v1-gem-cache-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle install
          command: bundle install --clean --path vendor/bundle
      - save_cache:
          key: v1-gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  copy-npm-rc:
    steps:
      - run:
          name: Copy npmrc sample file to final location
          command: cp .npmrc.SAMPLE .npmrc

jobs:
  analyse_js:
    executor:
      name: rn/linux_js
      node_version: '12'
    steps:
      - checkout
      - rn/yarn_install:
          yarn_install_directory: examples/purchaseTesterTypescript
          cache_folder: ~/.cache/yarn
      - install-dependencies
      - run:
          name: Tests
          command: yarn test
      - run:
          name: API Tests
          command: yarn tsc -p apitesters
      - run:
          name: Linter
          command: yarn run tslint
  docs-deploy:
    executor:
      name: rn/macos
      xcode_version: 13.2.0
    steps:
      - checkout
      - install-dependencies
      - install-mac-dependencies
      - set_up_git_user
      - run:
          name: Build docs
          command: bundle exec fastlane generate_docs

  android:
    executor: rn/linux_android
    steps:
      - checkout
      - rn/yarn_install:
          yarn_install_directory: examples/purchaseTesterTypescript
          cache_folder: ~/.cache/yarn
      - rn/android_build:
          project_path: examples/purchaseTesterTypescript/android
  ios:
    executor:
      name: rn/macos
      resource_class: macos.x86.medium.gen2
      xcode_version: 13.2.0
    steps:
      - checkout
      - rn/ios_simulator_start:
          device: iPhone 11 Pro
      - run:
          name: Update CocoaPods repo
          command: pod repo update
      - rn/yarn_install:
          yarn_install_directory: examples/purchaseTesterTypescript
          cache_folder: ~/.cache/yarn
      - run:
          name: Install example dependencies
          command: |
            cd examples/purchaseTesterTypescript/ios && pod install --repo-update && cd -
      - rn/yarn_install:
          cache_folder: ~/.cache/yarn
      - rn/ios_build:
          build_configuration: Release
          device: iPhone 11 Pro
          derived_data_path: ~/DerivedData
          project_type: workspace
          project_path: examples/purchaseTesterTypescript/ios/PurchaseTester.xcworkspace
          scheme: PurchaseTester

  prepare-next-version:
    description: "Creates a PR with the new snapshot version"
    docker:
      - image: cimg/ruby:3.1.2
    steps:
      - checkout
      - install-rubydocker-dependencies
      - trust-github-key
      - set_up_git_user
      - run:
          name: Prepare next version
          command: bundle exec fastlane prepare_next_version

  make-release:
    description: "Publishes the new version and creates a github release"
    executor:
      name: rn/macos
      xcode_version: 13.2.0
    steps:
      - checkout
      - install-dependencies
      - install-mac-dependencies
      - trust-github-key
      - copy-npm-rc
      - run:
          name: release
          command: bundle exec fastlane release

workflows:
  test:
    jobs:
      - analyse_js
      - android
      - ios
  deploy:
    jobs:
      - make-release:
          <<: *release-tags
      - prepare-next-version:
          requires:
            - make-release
      - docs-deploy:
          requires:
            - make-release
