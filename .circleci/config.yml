version: 2
jobs:
  tests:
    working_directory: ~/react-native-purchases
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: yarn
      - run:
          name: Tests
          command: yarn test
      - run:
          name: Linter
          command: yarn run lint
  android:
    working_directory: ~/react-native-purchases
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout
      - run:
          name: yarn run setup.example
          command: yarn run setup.example
      - run:
          name: Android compiles
          command: ./gradlew build
          working_directory: example/android
  ios:
    macos:
      xcode: "9.0"
    working_directory: ~/react-native-purchases
    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run:
          name: set Ruby version
          command: echo "ruby-2.4" > ~/.ruby-version
      - run: yarn run setup.example
      - restore_cache:
          key: bundle-v1-{{ checksum "example/ios/Gemfile.lock" }}-{{ arch }}
      - run:
          command: bundle install
          working_directory: example/ios

      - save_cache:
          key: bundle-v1-{{ checksum "example/ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane scan --scheme ReactNativeSample
          working_directory: example/ios

      - run:
          name: set up test results
          working_directory: example/ios
          when: always
          command: |
            mkdir -p test-results/fastlane test-results/xcode
            mv fastlane/report.xml test-results/fastlane
            mv fastlane/test_output/report.junit test-results/xcode/junit.xml
      - store_test_results:
          path: example/ios/test-results

      - store_artifacts:
          path: example/ios/test-results
workflows:
  version: 2
  node-android-ios:
    jobs:
      - android
      - ios
  tests:
    jobs:
      - tests