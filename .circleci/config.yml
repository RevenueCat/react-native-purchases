version: 2.1
orbs:
  rn: react-native-community/react-native@7.4.0
  revenuecat: revenuecat/sdks-common-config@2.2.0

aliases:
  release-tags: &release-tags
    filters:
      tags:
        ignore: /^.*-SNAPSHOT/
      branches:
        ignore: /.*/
  release-branches: &release-branches
    filters:
      tags:
        ignore: /.*/
      branches:
        only: /^release\/.*/
  only-main-branch: &only-main-branch
    filters:
      tags:
        ignore: /.*/
      branches:
        only: main

parameters:
  action:
    type: enum
    enum: [build, upgrade-hybrid-common, bump]
    default: build
  version:
    type: string
    default: ''
  automatic:
    type: boolean
    default: false

commands:
  # rn/ios_build depends on a specific cache key, so we need to create a custom step to install dependencies
  # we could use rn/yarn_install but that's not compatible with yarn 2
  install-dependencies-ios-build:
    steps:
      - run:
          name: Create cache checksum file
          command: |
            mkdir -p ~/.tmp/checksumfiles
            find . -type f -name 'package.json' -not -path "*node_modules*" -exec cat {} + >> ~/.tmp/checksumfiles/package.json
            find . -type f -name 'yarn.lock' -not -path "*node_modules*" -exec cat {} + >> ~/.tmp/checksumfiles/yarn.lock
      - restore_cache:
          keys:
            - yarn-cache-{{ arch }}-{{ checksum "~/.tmp/checksumfiles/package.json" }}-{{ checksum "~/.tmp/checksumfiles/yarn.lock" }}-{{ .Environment.CACHE_VERSION }}
      - run:
          name: Yarn Install
          command: yarn
      - save_cache:
          key: yarn-cache-{{ arch }}-{{ checksum "~/.tmp/checksumfiles/package.json" }}-{{ checksum "~/.tmp/checksumfiles/yarn.lock" }}-{{ .Environment.CACHE_VERSION }}
          paths:
            - .yarn/cache

  install-dependencies:
    parameters:
      machine:
        type: string
    steps:
      - restore_cache:
          keys:
            - yarn-v2-<<parameters.machine>>-{{ checksum "yarn.lock" }}
      - run:
          name: Yarn Install
          command: yarn
      - save_cache:
          key: yarn-v2-<<parameters.machine>>-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache

  copy-npm-rc:
    steps:
      - run:
          name: Copy npmrc sample file to final location
          command: cp .npmrc.SAMPLE .npmrc

jobs:
  analyse_js:
    executor:
      name: rn/linux_js
      node_version: '18.2'
    steps:
      - checkout
      - install-dependencies:
          machine: "unix"
      - run:
          name: Prepare package
          command: yarn prepare
      - run:
          name: Prepare UI package
          working_directory: react-native-purchases-ui
          command: yarn prepare
      - run:
          name: Tests
          command: yarn test
      - run:
          name: API Tests
          command: yarn tsc -p apitesters
      - run:
          name: Linter
          command: yarn run tslint
  docs-deploy:
    executor:
      name: rn/macos
      resource_class: macos.x86.medium.gen2
      xcode_version: 14.3.1
    steps:
      - checkout
      - install-dependencies:
          machine: "macos"
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - revenuecat/setup-git-credentials
      - run:
          name: Build docs
          command: bundle exec fastlane generate_docs

  android:
    executor:
      name: rn/linux_android
      # These are the default options in the orb, but with more memory because we were getting out of memory errors
      gradle_options: >-
        -Xmx4096m -Dorg.gradle.daemon=false
        -Dorg.gradle.jvmargs="-XX:+UnlockExperimentalVMOptions
        -XX:+HeapDumpOnOutOfMemoryError"
      java_options: '-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport'
      resource_class: medium
      build_image_version: latest
    steps:
      - checkout
      - install-dependencies:
          machine: "unix"
      - rn/android_build:
          project_path: examples/purchaseTesterTypescript/android
  ios:
    executor:
      name: rn/macos
      resource_class: macos.x86.medium.gen2
      xcode_version: 14.3.1
    steps:
      - checkout
      - rn/ios_simulator_start:
          device: iPhone 14
      - install-dependencies-ios-build
      - rn/pod_install:
          pod_install_directory: examples/purchaseTesterTypescript/ios
          pod_install_command: pod install --repo-update
      - rn/ios_build:
          build_configuration: Release
          device: iPhone 14
          derived_data_path: ~/DerivedData
          project_type: workspace
          project_path: examples/purchaseTesterTypescript/ios/PurchaseTester.xcworkspace
          scheme: PurchaseTester

  make-release:
    description: "Publishes the new version and creates a github release"
    executor:
      name: rn/macos
      resource_class: macos.x86.medium.gen2
      xcode_version: 14.3.1
    steps:
      - checkout
      - install-dependencies:
          machine: "macos"
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - revenuecat/trust-github-key
      - copy-npm-rc
      - run:
          name: release
          command: bundle exec fastlane release

  update-hybrid-common-versions:
    description: "Creates a PR updating purchases-hybrid-common to latest release"
    executor:
      name: rn/macos
      resource_class: macos.x86.medium.gen2
      xcode_version: 14.3.1
    steps:
      - checkout
      - revenuecat/install-gem-mac-dependencies:
          cache-version: v1
      - revenuecat/trust-github-key
      - revenuecat/setup-git-credentials
      - run:
          name: Updating to next version of phc
          command: |
            bundle exec fastlane update_hybrid_common \
            version:<< pipeline.parameters.version >> \
            open_pr:true \
            automatic_release:<< pipeline.parameters.automatic >>
workflows:
  test:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - analyse_js
      - android
      - ios

  deploy:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - hold:
          type: approval
          <<: *release-branches
      - revenuecat/tag-current-branch:
          requires:
            - hold
          <<: *release-branches
      - make-release:
          <<: *release-tags
      - docs-deploy:
          <<: *release-tags
          requires:
            - make-release

  danger:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - revenuecat/danger

  weekly-run-workflow:
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ "release-train", << pipeline.schedule.name >> ]
    jobs:
      - revenuecat/automatic-bump

  manual-trigger-bump:
    when:
      equal: [ bump, << pipeline.parameters.action >> ]
    jobs:
      - revenuecat/automatic-bump

  update-hybrid-common-versions:
     when:
       equal: [ upgrade-hybrid-common, << pipeline.parameters.action >> ]
     jobs:
       - update-hybrid-common-versions
